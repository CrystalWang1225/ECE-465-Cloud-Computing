service: ece465-final-bloodbank

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  environment:
    USER_TABLE: ${self:service}-userTable
    BLOOD_TABLE: ${self:service}-bloodTable
    DONATION_TABLE: ${self:service}-donationTable
    HOSPITAL_TABLE: ${self:service}-hospitalTable
    APP_SECRET: qZVUS7jsA33pnM6Vi8KG
    APP_BASE_URL: "http://localhost:3000"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_TABLE}"
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BLOOD_TABLE}"
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DONATION_TABLE}"
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.HOSPITAL_TABLE}"
  lambdaHashingVersion: 20201221
  httpApi:
    cors: true

functions:
  signup:
    handler: user/signup.signup
    events:
      - http:
          path: user
          method: post
          cors: true
  login:
    handler: user/login.login
    events:
      - http:
          path: user/{email}/{password}
          method: get
          cors: true
          request:
            parameters:
              paths:
                email: true
                password: true
  updateUser:
    handler: user/updateUser.updateUser
    events:
      - http:
          path: user
          method: put
          cors: true
  userList:
    handler: user/userList.userList
    events:
      - http:
          path: user/list/
          method: get
          cors: true
  userGetBlood:
    handler: user/userReqBlood.userReqBlood
    events:
      - http:
          path: user/ReqBlood
          method: put
          cors: true
  donate:
    handler: user/donate.donate
    events:
      - http:
          path: user/donate
          method: post
          cors: true
  donationList:
    handler: user/donationList.donationList
    events:
      - http:
          path: user/donate/{bloodGroup}
          method: get
          cors: true
          request:
            parameters:
              paths:
                bloodGroup: true
  userReqList:
    handler: user/userReqList.userReqList
    events:
      - http:
          path: user/reqlist/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  userDonations:
    handler: user/userDonations.userDonations
    events:
      - http:
          path: user/donationlist/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  hospitalBlood:
    handler: user/hospitalBlood.hospitalBlood
    events:
      - http:
          path: hospital/blood/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true                
  createHospital:
    handler: hospital/createHospital.createHospital
    events:
      - http:
          path: hospital/create
          method: post
          cors: true



  create:
    handler: todos/create.create
    events:
      - http:
          path: todos
          method: post
          cors: true
          request:
            parameters:
              querystrings:
                type: true


  list:
    handler: todos/list.list
    events:
      - http:
          path: todos
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                type: true
                name: false
                job: false
                place: false


  get:
    handler: todos/get.get
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true

  update:
    handler: todos/update.update
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true
          request:
            parameters:
              querystrings:
                type: true

  delete:
    handler: todos/delete.delete
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true
          request:
            parameters:
              querystrings:
                type: true

resources:
  Resources:
    usersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USER_TABLE}
    bloodTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.BLOOD_TABLE}
    donationTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DONATION_TABLE}
    hospitalTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.HOSPITAL_TABLE}
    
